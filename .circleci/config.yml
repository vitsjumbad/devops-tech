version: 2.1

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      
      
      - run:
          name: Run unit tests and generate code coverage
          command: |
            mvn clean test
            echo "==== Code coverage report location ===="
            echo "target/site/jacoco/index.html (downloadable in artifacts if configured)"
      - store_artifacts:
          path: target/site/jacoco
          destination: jacoco-report

      - run:
          name: Run SonarQube analysis
          command: |
              mvn sonar:sonar \
              -Dsonar.projectKey=springboot-devops-demo \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN   
  

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build Docker Image
          command: |
            docker build -t djdevops2025/springboot-devops-demo:latest .

      - run:
          name: Login to DockerHub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin

      - run:
          name: Push Image to DockerHub
          command: |
            docker push djdevops2025/springboot-devops-demo:latest

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Save EC2 Private Key
          command: |
            echo "$EC2_PRIVATE_KEY" | base64 -d > ec2-key.pem
            chmod 600 ec2-key.pem

      - run:
          name: SSH into EC2 and deploy
          command: |
            ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST '
              echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
              docker pull djdevops2025/springboot-devops-demo:latest
              docker stop app || true
              docker rm app || true
              docker run -d -p 8081:8081 --name app djdevops2025/springboot-devops-demo:latest
            '

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
